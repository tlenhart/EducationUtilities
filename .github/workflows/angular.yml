# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Build and Deploy Site

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
    types:
      - closed

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - run: npm audit
      - run: npm ci
      - run: npm run build --if-present
      - run: npm test --if-present
      - name: Copy 3rdpartylicenses.txt to /browser folder.
        run: cp dist/education-utilities/3rdpartylicenses.txt dist/education-utilities/browser/3rdpartylicenses.txt

      - name: Replace 404.html with index.html to allow angular routing to work correctly.
        run: cp dist/education-utilities/browser/index.html dist/education-utilities/browser/404.html

      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Upload primary site build artifacts
        uses: actions/upload-pages-artifact@v3
        with:
          path: 'dist/education-utilities/browser/'
      # - name: Upload 3rdpartylicenses.txt
      #   uses: actions/upload-pages-artifact@v3
      #   with:
      #     path: 'dist/education-utilities/3rdpartylicenses.txt'

  # Deployment job
  deploy:
    if: github.event.pull_request.merged == true
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

    # - name: Cache
    #   uses: actions/cache@v4.0.2
    #   with:
    #     # A list of files, directories, and wildcard patterns to cache and restore
    #     path:
    #     # An explicit key for restoring and saving the cache
    #     key:
    #     # An ordered list of keys to use for restoring stale cache if no cache hit occurred for key. Note `cache-hit` returns false in this case.
    #     restore-keys: # optional
    #     # The chunk size used to split up large files during upload, in bytes
    #     upload-chunk-size: # optional
    #     # An optional boolean when enabled, allows windows runners to save or restore caches that can be restored or saved respectively on other platforms
    #     enableCrossOsArchive: # optional, default is false
    #     # Fail the workflow if cache entry is not found
    #     fail-on-cache-miss: # optional, default is false
    #     # Check if a cache entry exists for the given input(s) (key, restore-keys) without downloading the cache
    #     lookup-only: # optional, default is false
    #     # Run the post step to save the cache even if another step before fails
    #     save-always: # optional, default is false
